#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gee_Whiz_Software_Test.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoftwareTest")]
	public partial class SoftwareTestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public SoftwareTestDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SoftwareTestConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SoftwareTestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SoftwareTestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SoftwareTestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SoftwareTestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vw_Variety> vw_Varieties
		{
			get
			{
				return this.GetTable<vw_Variety>();
			}
		}
		
		public System.Data.Linq.Table<vw_Region> vw_Regions
		{
			get
			{
				return this.GetTable<vw_Region>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_BlockSearch", IsComposable=true)]
		public IQueryable<fn_BlockSearchResult> fn_BlockSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> regionId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> varietyId)
		{
			return this.CreateMethodCallQuery<fn_BlockSearchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), regionId, varietyId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ModifyHarvestForecast")]
		public int sp_ModifyHarvestForecast([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockId", DbType="NVarChar(25)")] string blockId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CropYear", DbType="Int")] System.Nullable<int> cropYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ForcastValue", DbType="Int")] System.Nullable<int> forcastValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RetVal", DbType="Int")] ref System.Nullable<int> retVal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blockId, cropYear, forcastValue, retVal);
			retVal = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteHarvestForecast")]
		public int sp_DeleteHarvestForecast([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockId", DbType="NVarChar(25)")] string blockId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RetVal", DbType="Int")] ref System.Nullable<int> retVal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blockId, retVal);
			retVal = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_GetHarvestForecast", IsComposable=true)]
		public IQueryable<fn_GetHarvestForecastResult> fn_GetHarvestForecast([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockId", DbType="NVarChar(25)")] string blockId)
		{
			return this.CreateMethodCallQuery<fn_GetHarvestForecastResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blockId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_GetPreviousHarvestForecast", IsComposable=true)]
		public IQueryable<fn_GetPreviousHarvestForecastResult> fn_GetPreviousHarvestForecast([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockId", DbType="NVarChar(25)")] string blockId)
		{
			return this.CreateMethodCallQuery<fn_GetPreviousHarvestForecastResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blockId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_GetPreviousHarvestActuals", IsComposable=true)]
		public IQueryable<fn_GetPreviousHarvestActualsResult> fn_GetPreviousHarvestActuals([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockId", DbType="NVarChar(25)")] string blockId)
		{
			return this.CreateMethodCallQuery<fn_GetPreviousHarvestActualsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blockId);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Variety")]
	public partial class vw_Variety
	{
		
		private long _VarietyID;
		
		private string _VarietyName;
		
		public vw_Variety()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarietyID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long VarietyID
		{
			get
			{
				return this._VarietyID;
			}
			set
			{
				if ((this._VarietyID != value))
				{
					this._VarietyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarietyName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string VarietyName
		{
			get
			{
				return this._VarietyName;
			}
			set
			{
				if ((this._VarietyName != value))
				{
					this._VarietyName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_Region")]
	public partial class vw_Region
	{
		
		private long _RegionId;
		
		private string _RegionName;
		
		public vw_Region()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this._RegionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
	}
	
	public partial class fn_BlockSearchResult
	{
		
		private string _BlockID;
		
		private int _RegionId;
		
		private string _Region;
		
		private int _Ranch;
		
		private decimal _Acres;
		
		private int _VarietyID;
		
		private string _VarietyName;
		
		private decimal _Latitude;
		
		private decimal _Longitude;
		
		public fn_BlockSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BlockID
		{
			get
			{
				return this._BlockID;
			}
			set
			{
				if ((this._BlockID != value))
				{
					this._BlockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this._RegionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(25)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ranch", DbType="Int NOT NULL")]
		public int Ranch
		{
			get
			{
				return this._Ranch;
			}
			set
			{
				if ((this._Ranch != value))
				{
					this._Ranch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acres", DbType="Decimal(10,2) NOT NULL")]
		public decimal Acres
		{
			get
			{
				return this._Acres;
			}
			set
			{
				if ((this._Acres != value))
				{
					this._Acres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarietyID", DbType="Int NOT NULL")]
		public int VarietyID
		{
			get
			{
				return this._VarietyID;
			}
			set
			{
				if ((this._VarietyID != value))
				{
					this._VarietyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarietyName", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string VarietyName
		{
			get
			{
				return this._VarietyName;
			}
			set
			{
				if ((this._VarietyName != value))
				{
					this._VarietyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(10,6) NOT NULL")]
		public decimal Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this._Latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(10,6) NOT NULL")]
		public decimal Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this._Longitude = value;
				}
			}
		}
	}
	
	public partial class fn_GetHarvestForecastResult
	{
		
		private int _CropYear;
		
		private string _BlockID;
		
		private int _ForcastValue;
		
		public fn_GetHarvestForecastResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CropYear", DbType="Int NOT NULL")]
		public int CropYear
		{
			get
			{
				return this._CropYear;
			}
			set
			{
				if ((this._CropYear != value))
				{
					this._CropYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BlockID
		{
			get
			{
				return this._BlockID;
			}
			set
			{
				if ((this._BlockID != value))
				{
					this._BlockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForcastValue", DbType="Int NOT NULL")]
		public int ForcastValue
		{
			get
			{
				return this._ForcastValue;
			}
			set
			{
				if ((this._ForcastValue != value))
				{
					this._ForcastValue = value;
				}
			}
		}
	}
	
	public partial class fn_GetPreviousHarvestForecastResult
	{
		
		private int _CropYear;
		
		private string _BlockID;
		
		private int _ForcastValue;
		
		public fn_GetPreviousHarvestForecastResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CropYear", DbType="Int NOT NULL")]
		public int CropYear
		{
			get
			{
				return this._CropYear;
			}
			set
			{
				if ((this._CropYear != value))
				{
					this._CropYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BlockID
		{
			get
			{
				return this._BlockID;
			}
			set
			{
				if ((this._BlockID != value))
				{
					this._BlockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForcastValue", DbType="Int NOT NULL")]
		public int ForcastValue
		{
			get
			{
				return this._ForcastValue;
			}
			set
			{
				if ((this._ForcastValue != value))
				{
					this._ForcastValue = value;
				}
			}
		}
	}
	
	public partial class fn_GetPreviousHarvestActualsResult
	{
		
		private int _CropYear;
		
		private string _BlockID;
		
		private System.DateTime _HarvestDate;
		
		private int _Bins;
		
		public fn_GetPreviousHarvestActualsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CropYear", DbType="Int NOT NULL")]
		public int CropYear
		{
			get
			{
				return this._CropYear;
			}
			set
			{
				if ((this._CropYear != value))
				{
					this._CropYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockID", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string BlockID
		{
			get
			{
				return this._BlockID;
			}
			set
			{
				if ((this._BlockID != value))
				{
					this._BlockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HarvestDate", DbType="DateTime NOT NULL")]
		public System.DateTime HarvestDate
		{
			get
			{
				return this._HarvestDate;
			}
			set
			{
				if ((this._HarvestDate != value))
				{
					this._HarvestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bins", DbType="Int NOT NULL")]
		public int Bins
		{
			get
			{
				return this._Bins;
			}
			set
			{
				if ((this._Bins != value))
				{
					this._Bins = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
